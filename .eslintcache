[{"C:\\Users\\David\\Documents\\atlas\\src\\index.js":"1","C:\\Users\\David\\Documents\\atlas\\src\\App.js":"2","C:\\Users\\David\\Documents\\atlas\\src\\reportWebVitals.js":"3","C:\\Users\\David\\Documents\\atlas\\src\\components\\LoadIndicatorWithDelay.js":"4","C:\\Users\\David\\Documents\\atlas\\src\\Home.js":"5","C:\\Users\\David\\Documents\\atlas\\src\\components\\SideMenu.js":"6","C:\\Users\\David\\Documents\\atlas\\src\\components\\MapComponent.js":"7"},{"size":561,"mtime":1610211901701,"results":"8","hashOfConfig":"9"},{"size":3904,"mtime":1610404150677,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":807,"mtime":1610211452747,"results":"12","hashOfConfig":"9"},{"size":642,"mtime":1610389622760,"results":"13","hashOfConfig":"9"},{"size":2178,"mtime":1610389236953,"results":"14","hashOfConfig":"9"},{"size":3714,"mtime":1614098675485,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6e8b0e",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\David\\Documents\\atlas\\src\\index.js",[],["33","34"],"C:\\Users\\David\\Documents\\atlas\\src\\App.js",["35","36","37","38"],"import React , { Suspense, lazy } from 'react'\nimport {BrowserRouter as Router, Switch, Route, withRouter} from \"react-router-dom\"\nimport LoadIndicatorWithDelay from \"./components/LoadIndicatorWithDelay\"\nimport SideMenu from \"./components/SideMenu\"\nimport { Menu } from 'antd'\nimport { MenuOutlined } from '@ant-design/icons'\nimport { BrowserView, MobileView, isMobile } from \"react-device-detect\"\n\nimport './styles/App.css'\nimport { Layout } from 'antd';\n\nconst Home = lazy(() => import('./Home'))\n\nconst { Sider, Header } = Layout\n\nclass App extends React.Component{\n\n    constructor(){\n        super()\n        this.state = {\n            isMenuOpen: false,\n            isGraticule: false,\n            isSphere: false,\n            isEquator: false,\n            selectedMenuKey: '1',\n        }\n    }\n\n    toggleMenu = () => {\n        this.setState(prevState =>{\n            return{\n                isMenuOpen: !prevState.isMenuOpen\n            }\n        })\n    }\n\n    toggleIsGraticule = () => {\n        this.setState(prevState =>{\n            return{\n                isGraticule: !prevState.isGraticule\n            }\n        })\n    }\n\n    toggleIsSphere = () => {\n        this.setState(prevState =>{\n            return{\n                isSphere: !prevState.isSphere\n            }\n        })\n    }\n\n    toggleIsEquator = () => {\n        this.setState(prevState =>{\n            return{\n                isEquator: !prevState.isEquator\n            }\n        })\n    }\n\n    onChangeMenuKey = (event) =>{\n        this.setState({\n            selectedMenuKey: event.key\n        })\n    }\n\n    render(){\n\n        return(\n            <div>\n                <Layout style={{height:\"100vh\"}}>\n                    <MobileView>\n                        <Layout style={{zIndex:9}}>\n                            <Header style={{display:\"flex\", height:\"50px\", padding:\"0 20px\"}}  className=\"header\">\n                                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['0']} style={{display:\"flex\"}}>\n                                    <MenuOutlined className=\"hamburgerButton\" onClick={this.toggleMenu}/>\n                                </Menu>\n                                <div className=\"headerTitleDiv\">\n                                    <h1 className=\"headerTitle\">Atlas</h1>\n                                </div>\n                            </Header>\n                        </Layout>\n                    </MobileView>\n                    <Layout>\n                        <SideMenu\n                            isMenuOpen={this.state.isMenuOpen}\n                            isGraticule={this.state.isGraticule}\n                            toggleIsGraticule={this.toggleIsGraticule}\n                            isSphere={this.state.isSphere}\n                            toggleIsSphere={this.toggleIsSphere}\n                            isEquator={this.state.isEquator}\n                            toggleIsEquator={this.toggleIsEquator}\n                            selectedMenuKey={this.state.selectedMenuKey}\n                            onChangeMenuKey={this.onChangeMenuKey}\n                        />\n                        <Suspense fallback={<LoadIndicatorWithDelay/>}>\n                            <Switch>\n                                <Route path=\"/\">\n                                    <Home\n                                        isGraticule={this.state.isGraticule}\n                                        isSphere={this.state.isSphere}\n                                        isEquator={this.state.isEquator}\n                                        selectedMenuKey={this.state.selectedMenuKey}\n                                    />\n                                </Route>      \n                            </Switch>\n                        </Suspense>\n                    </Layout>\n                </Layout>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(App)","C:\\Users\\David\\Documents\\atlas\\src\\reportWebVitals.js",[],"C:\\Users\\David\\Documents\\atlas\\src\\components\\LoadIndicatorWithDelay.js",[],"C:\\Users\\David\\Documents\\atlas\\src\\Home.js",[],"C:\\Users\\David\\Documents\\atlas\\src\\components\\SideMenu.js",["39","40","41"],"import React from \"react\"\r\nimport 'antd/dist/antd.css'\r\nimport { Layout , Switch , Menu } from 'antd'\r\nimport { GlobalOutlined , UserOutlined , EuroCircleOutlined , SettingOutlined} from '@ant-design/icons'\r\nimport \"../styles/SideMenu.css\"\r\nimport { isMobile } from \"react-device-detect\"\r\nconst { SubMenu } = Menu\r\nconst { Sider, Header } = Layout\r\n\r\n\r\nclass SideMenu extends React.Component{\r\n\r\n\trender(){\r\n\r\n\t\treturn(\r\n\t\t\t<Sider width={180}  className={`${!isMobile || isMobile && this.props.isMenuOpen ? \"showSideMenu\" : \"hideSideMenu\"}`}>\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tstyle={{ minHeight: '100vh' }}\r\n\t\t\t        selectedKeys={[this.props.selectedMenuKey]}\r\n\t\t\t        onClick={this.props.onChangeMenuKey}\r\n\t\t\t        defaultOpenKeys={['sub1']}\r\n\t\t\t        mode=\"inline\"\r\n\t\t\t        theme=\"dark\"\r\n\t\t\t    >\r\n\t\t\t        <SubMenu key=\"sub1\" icon={<GlobalOutlined />} title=\"Maps\">\r\n\t\t\t            <Menu.Item key=\"1\" icon={<UserOutlined />}>Population</Menu.Item>\r\n\t\t\t            <Menu.Item key=\"2\" icon={<EuroCircleOutlined />}>GDP</Menu.Item>\r\n\t\t\t        </SubMenu>\r\n\t\t\t        <SubMenu key=\"sub2\" icon={<SettingOutlined />} title=\"Config\">\r\n\t\t\t        \t<div style={{marginLeft:\"auto\", marginRight:\"30px\", marginTop:\"10px\", display:\"table\"}}>\r\n\t\t\t\t        \t<label htmlFor=\"graticule\">Graticule</label>\r\n\t\t\t\t        \t<Switch id=\"graticule\" checked={this.props.isGraticule} onChange={this.props.toggleIsGraticule} style={{marginLeft:\"10px\"}}/>\r\n\t\t\t        \t</div>\r\n\t\t\t        \t<div style={{marginLeft:\"auto\", marginRight:\"30px\", marginTop:\"20px\", display:\"table\"}}>\r\n\t\t\t\t        \t<label htmlFor=\"sphere\">Sphere</label>\r\n\t\t\t\t        \t<Switch id=\"sphere\" checked={this.props.isSphere} onChange={this.props.toggleIsSphere} style={{marginLeft:\"10px\"}}/>\r\n\t\t\t        \t</div>\r\n\t\t\t        \t<div style={{marginLeft:\"auto\", marginRight:\"30px\", marginTop:\"20px\", marginBottom:\"20px\", display:\"table\"}}>\r\n\t\t\t\t        \t<label htmlFor=\"equator\">Equator</label>\r\n\t\t\t\t        \t<Switch id=\"equator\" checked={this.props.isEquator} onChange={this.props.toggleIsEquator} style={{marginLeft:\"10px\"}}/>\r\n\t\t\t        \t</div>\r\n\t\t\t        </SubMenu>\r\n\t\t\t    </Menu>\r\n\t\t\t</Sider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SideMenu","C:\\Users\\David\\Documents\\atlas\\src\\components\\MapComponent.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":26,"nodeType":"48","messageId":"49","endLine":2,"endColumn":32},{"ruleId":"46","severity":1,"message":"50","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":21},{"ruleId":"46","severity":1,"message":"51","line":7,"column":35,"nodeType":"48","messageId":"49","endLine":7,"endColumn":43},{"ruleId":"46","severity":1,"message":"52","line":14,"column":9,"nodeType":"48","messageId":"49","endLine":14,"endColumn":14},{"ruleId":"46","severity":1,"message":"53","line":8,"column":16,"nodeType":"48","messageId":"49","endLine":8,"endColumn":22},{"ruleId":"54","severity":1,"message":"55","line":16,"column":48,"nodeType":"56","messageId":"57","endLine":16,"endColumn":50},{"ruleId":"54","severity":1,"message":"55","line":16,"column":60,"nodeType":"56","messageId":"57","endLine":16,"endColumn":62},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'BrowserView' is defined but never used.","'isMobile' is defined but never used.","'Sider' is assigned a value but never used.","'Header' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]